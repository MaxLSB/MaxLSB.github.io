---
import { getCollection } from "astro:content";
import BaseLayout from "../../components/layout/BaseLayout.astro";
import BaseHero from "../../components/shared/BaseHero.astro";
import ArticleCard from "../../components/ui/ArticleCard.astro";
import Container from "../../components/ui/Container.astro";
import ContentList from "../../components/shared/ContentList.astro";

const projects = await getCollection("projects");

// Define the desired order
const projectOrder = [
  "Luth x LFM2",
  "Luth", 
  "LeCarnet",
  "Flash Attention 2",
  "Paligemma 2",
  "cWGAN-GP",
  "Word2Vec",
  "VolleyJudge"
];

const sortedProjects = projects.sort((a, b) => {
  const indexA = projectOrder.indexOf(a.data.title);
  const indexB = projectOrder.indexOf(b.data.title);
  
  // If both projects are in the order list, sort by their position
  if (indexA !== -1 && indexB !== -1) {
    return indexA - indexB;
  }
  
  // If only one is in the list, prioritize it
  if (indexA !== -1) return -1;
  if (indexB !== -1) return 1;
  
  // If neither is in the list, sort alphabetically
  return a.data.title.localeCompare(b.data.title);
});
---

<BaseLayout title="Projects" description="Personal projects and open source contributions">
  <Container>
    <BaseHero title="Projects" description="Personal projects and open source contributions" />
    <ContentList>
      {
        sortedProjects.map((project) => (
          <ArticleCard
            title={project.data.title}
            description={project.data.description}
            url={project.data.url}
            tags={project.data.techs}
            additionalLinks={project.data.additionalLinks}
          />
        ))
      }
    </ContentList>
  </Container>
</BaseLayout>

<style>
  /* Prevent layout shift by using CSS custom properties */
  :root {
    --scrollbar-width: 0px;
  }

  /* Calculate scrollbar width and store it */
  html {
    scrollbar-gutter: stable both-edges;
  }

  /* Force consistent layout by preventing horizontal overflow */
  body {
    overflow-x: hidden;
    min-width: 100vw;
  }

  /* Ensure the main container doesn't shift */
  .container {
    width: 100%;
    max-width: 768px;
    margin: 0 auto;
    box-sizing: border-box;
  }

  /* Prevent any horizontal movement */
  html, body {
    position: relative;
    left: 0;
    right: 0;
  }
</style>

<script>
  // Calculate scrollbar width to prevent layout shift
  const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;
  document.documentElement.style.setProperty('--scrollbar-width', `${scrollbarWidth}px`);
</script>
